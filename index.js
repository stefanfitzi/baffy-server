/*
 * REST service providing all functionality needed for CRUD operations on member entity
 */
var express = require('express')
var bodyParser = require('body-parser');
var mysql = require('mysql')
var propertiesReader = require('properties-reader');

var app = express()

// CORS implementation
var allowCrossDomain = function(req, res, next) {
    res.header('Access-Control-Allow-Origin', "*");
    res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');
    res.header('Access-Control-Allow-Headers', 'Content-Type');
    next();
}
app.use(allowCrossDomain);

// parse incoming request bodies in a middleware before your handlers and makes them available under req.body
app.use(bodyParser.json());

var properties = propertiesReader('application.properties');

// database connection pool (configured with values from file application.properties)
var pool = mysql.createPool({
    connectionLimit: properties.get('db.pool.connectionLimit'),
    host: properties.get('db.pool.host'),
    user: properties.get('db.pool.user'),
    password: properties.get('db.pool.password'),
    database: properties.get('db.pool.database'),
    debug: properties.get('db.pool.debug'),
});

function printOutProperties() {
    return '\ndb-host: ' + properties.get('db.pool.host') + '\ndatabase: ' + properties.get('db.pool.database') + '\ndb-user: ' + properties.get('db.pool.user');
}

console.log('start application with the following properties: ' + printOutProperties());

// base function for all database requests (parameters: res=http response, query=SQL query with '?' placeholders, data=object with a value for every query placeholder)
function handle_database(res, query, data) {

    pool.getConnection(function (err, connection) {
        if (err) {
            res.json({ "code": 100, "status": "Error in connection database" });
            return;
        }

        connection.query(query, data, function (err, rows) {
            connection.release();
            if (!err) {
                res.json(rows);
            }
        });

        connection.on('error', function (err) {
            res.json({ "code": 100, "status": "Error executing the query: " + query + "with data: " + data });
            return;
        });
    });
}

// get all members
app.get('/member', function (req, res) {
    console.log('request: ' + req.method + ' all members');
    handle_database(res, 'select * from member');
})

// get one member by id
app.get('/member/:id', function (req, res) {
    console.log('request: ' + req.method + ' member with id ' + req.params.id);
    handle_database(res, 'select * from member where id=?', req.params.id);
})

// store a new member (id is generated by database)
app.post('/member', function (req, res) {
    console.log('request: ' + req.method + ' member with data: ' + JSON.stringify(req.body));
    var data = req.body;
    handle_database(res, 'insert into member set ?', data);
})

// update an existing member
app.put('/member/:id', function (req, res) {
    console.log('request: ' + req.method + ' member with id ' + req.params.id + ' and with data: ' + JSON.stringify(req.body));
    var data = req.body;
    handle_database(res, 'update member set ? where id=?', [data, req.params.id]);
})

// delete one member by id
app.delete('/member/:id', function (req, res) {
    console.log('request: ' + req.method + ' member with id ' + req.params.id);
    handle_database(res, 'delete from member where id=?', req.params.id);
})

// start REST service on port 3000
app.listen(3000)